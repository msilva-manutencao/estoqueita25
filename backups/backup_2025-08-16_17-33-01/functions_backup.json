[
  {
    "schema_name": "public",
    "function_name": "add_user_to_company",
    "return_type": "json",
    "arguments": "p_user_email text, p_company_id uuid, p_permission_type permission_type DEFAULT 'read'::permission_type",
    "function_definition": "CREATE OR REPLACE FUNCTION public.add_user_to_company(p_user_email text, p_company_id uuid, p_permission_type permission_type DEFAULT 'read'::permission_type)\\n RETURNS json\\n LANGUAGE plpgsql\\n SECURITY DEFINER\\nAS $function$\\nDECLARE\\n  v_user_id UUID;\\n  v_company_name TEXT;\\n  v_result JSON;\\nBEGIN\\n  -- Verificar se o usuário atual é super admin\\n  IF NOT is_super_admin() THEN\\n    RETURN json_build_object('success', false, 'error', 'Acesso negado. Apenas super admins podem adicionar usuários a empresas.');\\n  END IF;\\n\\n  -- Buscar o ID do usuário pelo email\\n  SELECT au.id INTO v_user_id\\n  FROM auth.users au\\n  JOIN profiles p ON p.id = au.id\\n  WHERE p.email = p_user_email;\\n\\n  IF v_user_id IS NULL THEN\\n    RETURN json_build_object('success', false, 'error', 'Usuário não encontrado com o email: ' || p_user_email);\\n  END IF;\\n\\n  -- Buscar o nome da empresa\\n  SELECT name INTO v_company_name\\n  FROM companies\\n  WHERE id = p_company_id AND is_active = true;\\n\\n  IF v_company_name IS NULL THEN\\n    RETURN json_build_object('success', false, 'error', 'Empresa não encontrada ou inativa.');\\n  END IF;\\n\\n  -- Verificar se o usuário já está na empresa\\n  IF EXISTS (\\n    SELECT 1 FROM company_users \\n    WHERE user_id = v_user_id AND company_id = p_company_id AND is_active = true\\n  ) THEN\\n    RETURN json_build_object('success', false, 'error', 'Usuário já está vinculado a esta empresa.');\\n  END IF;\\n\\n  -- Adicionar o usuário à empresa\\n  INSERT INTO company_users (company_id, user_id, permission_type, created_by, is_active)\\n  VALUES (p_company_id, v_user_id, p_permission_type, auth.uid(), true);\\n\\n  RETURN json_build_object(\\n    'success', true, \\n    'message', 'Usuário ' || p_user_email || ' adicionado com sucesso à empresa ' || v_company_name || ' com permissão ' || p_permission_type::text\\n  );\\n\\nEXCEPTION\\n  WHEN OTHERS THEN\\n    RETURN json_build_object('success', false, 'error', 'Erro interno: ' || SQLERRM);\\nEND;\\n$function$\\n"
  }
]